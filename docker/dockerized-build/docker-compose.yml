version: '3'

networks:
  challenge:
    driver: bridge

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    networks:
      - challenge
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    restart: always
    networks:
      - challenge
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LOG_RETENTION_HOURS=-1
      - KAFKA_CFG_MIN_INSYNC_REPLICAS=1
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_CFG_NUM_PARTITIONS=16
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ../../data/kafka:/opt/bitnami/kafka/logs
    depends_on:
      - zookeeper

  mongo:
    image: 'mongo:latest'
    restart: always
    networks:
      - challenge
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - ../../call-management/docker/mongo-init.js:/docker-entrypoint-initdb.d/call-db-init.js:ro
      - ../../call-statistics/docker/mongo-init.js:/docker-entrypoint-initdb.d/stat-db-init.js:ro
      - ../../data/mongo:/data/db

  mongo-express:
    image: 'mongo-express:latest'
    restart: always
    networks:
      - challenge
    environment:
      ME_CONFIG_SITE_BASEURL: '/db'
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin

  swagger:
    image: 'swaggerapi/swagger-ui:latest'
    restart: always
    networks:
      - challenge
    environment:
#      BASE_URL: '/swagger'
      SWAGGER_JSON: '/openapi.yml'
    volumes:
      - ../../openapi.yml:/openapi.yml:ro

  nginx:
    image: nginx:latest
    restart: always
    networks:
      - challenge
    ports:
      - '9000:80'
    volumes:
      - ../extra/nginx.conf:/etc/nginx/conf.d/default.conf:ro

  call-management:
    build:
      context: ../..
      dockerfile: ./docker/dockerized-build/Dockerfile
      args:
        module: call-management
        modulePath: call-management/module
        suffix: '-module'
    networks:
      - challenge

  call-statistics:
    build:
      context: ../..
      dockerfile: ./docker/dockerized-build/Dockerfile
      args:
        module: call-statistics
        modulePath: call-statistics/module
        suffix: '-module'
    networks:
      - challenge

  gateway:
    build:
      context: ../..
      dockerfile: ./docker/dockerized-build/Dockerfile
      args:
        module: api-gateway
        modulePath: api-gateway
        suffix: ''
    environment:
      specPath: '/openapi.yml'
      baseUrl: '/api'
    volumes:
      - ../../openapi.yml:/openapi.yml:ro
    networks:
      - challenge
